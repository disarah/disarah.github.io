{"version":3,"file":"component---src-pages-visual-arts-js-3caf352a86540cfe8e7a.js","mappings":"gPAoBA,EAfgB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrBC,EAAO,IAAIC,OAAOJ,GAClBK,EAASJ,EAAKK,QAAQC,MAAMC,QAAO,SAAAC,GAAI,OAAIN,EAAKO,KAAKD,EAAKE,KAAKC,QACpEC,KAAI,SAACC,EAAOC,GAAR,OAAgB,qBAAGC,KAAK,oCAAmC,gBAAC,IAAD,CAAKD,IAAKA,EAAKE,UAAU,cAAcC,MAAOJ,EAAMH,KAAKQ,gBAAgBD,MAAOE,IAAKN,EAAMH,KAAKU,KAAKC,MAAM,KAAK,SAChL,OACI,2BACI,0BAAKpB,GACL,2BACA,uBAAKe,UAAU,cAAcM,MAAO,CAACC,oBAAoB,2BACpDnB,KC6BjB,EArCkB,WAChB,IAAMJ,GAAOwB,EAAAA,EAAAA,gBAAe,cAiB5B,OACE,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAKvB,MAAM,gBACX,sBAAIqB,MAAO,CAACG,WAAY,iBAAxB,eACA,+EACA,yCAAgB,qBAAGV,KAAK,oCAAR,cAAhB,cACA,2BACE,gBAAC,EAAD,CAAShB,KAAM,qBAAsBC,KAAMA,EAAMC,MAAO,WAC1D,2BACE,gBAAC,EAAD,CAASF,KAAM,sBAAuBC,KAAMA,EAAMC,MAAO,YAC3D,2BACE,gBAAC,EAAD,CAASF,KAAM,wBAAyBC,KAAMA,EAAMC,MAAO,eAC7D,2BACE,gBAAC,EAAD,CAASF,KAAM,wBAAyBC,KAAMA,EAAMC,MAAO","sources":["webpack://gatsby-starter-hello-world/./src/components/gallery.js","webpack://gatsby-starter-hello-world/./src/pages/visual-arts.js"],"sourcesContent":["import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport \"./image.css\"\n\nconst Gallery = ({ path, data, title}) => {\n    const filt = new RegExp(path)\n    const images = data.allFile.edges.filter(edge => filt.test(edge.node.dir))\n    .map((image, key) => <a href=\"https://estyduck.artstation.com/\"><Img key={key} className=\"gimage-item\" fluid={image.node.childImageSharp.fluid} alt={image.node.base.split(\".\")[0]}/></a>)\n    return (\n        <div>\n            <h2>{title}</h2>\n            <hr></hr>\n            <div className=\"gimage-grid\" style={{gridTemplateColumns:\"repeat(auto-fill, 1fr)\"}}>\n                {images}\n            </div>\n        </div>\n    )\n}\n\nexport default Gallery","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Gallery from \"../components/gallery\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: {extension: {regex: \"/(jpg)|(png)|(jpeg)/\"}, dir: {regex: \"/images/(art)|(camera)/\"}}) {\n        edges {\n          node {\n            base\n            dir\n            childImageSharp {\n                fluid(maxWidth: 300, maxHeight: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n    <Seo title=\"Visual Arts\" />\n    <h1 style={{fontFamily: 'Fanwood Text'}}>Visual Arts</h1>\n    <p>I love painting and taking photos in my free time.</p>\n    <p>Check out my <a href=\"https://estyduck.artstation.com/\">Artstation</a> for more!</p>\n    <hr></hr>\n      <Gallery path={\"/images/art/people\"} data={data} title={\"People\"}/>\n    <hr></hr>\n      <Gallery path={\"/images/art/animals\"} data={data} title={\"Animals\"}/>\n    <hr></hr>\n      <Gallery path={\"/images/art/landscape\"} data={data} title={\"Landscapes\"}/>\n    <hr></hr>\n      <Gallery path={\"/images/camera/photos\"} data={data} title={\"Photos\"}/>\n    </Layout>\n  )\n}\n\n\nexport default IndexPage\n"],"names":["path","data","title","filt","RegExp","images","allFile","edges","filter","edge","test","node","dir","map","image","key","href","className","fluid","childImageSharp","alt","base","split","style","gridTemplateColumns","useStaticQuery","fontFamily"],"sourceRoot":""}